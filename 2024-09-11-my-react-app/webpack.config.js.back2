const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
// const MiniCssExtractPlugin = require('mini-css-extract-plugin');
// const TerserPlugin = require('terser-webpack-plugin');
// const { CleanWebpackPlugin } = require('clean-webpack-plugin');

module.exports = {
  mode: 'production', // 使用生产模式
  entry: './src/index.js', // 入口文件
  output: {
    filename: '[name].[contenthash].js', // 使用内容哈希生成文件名
    path: path.resolve(__dirname, 'dist'),
    publicPath: '/', // 使得应用能够正确地加载资源
  },
  module: {
    rules: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: 'babel-loader', // 使用 babel-loader 转换 ES6+
      },
    //   {
    //     test: /\.css$/,
    //     use: [
    //       MiniCssExtractPlugin.loader, // 提取 CSS 到单独文件
    //       'css-loader', // 处理 CSS 文件
    //     ],
    //   },
      {
        test: /\.(png|jpg|gif|svg)$/,
        type: 'asset/resource', // 处理图片资源
      },
      {
        test: /\.(woff|woff2|eot|ttf|otf)$/,
        type: 'asset/resource', // 处理字体文件
      },
    ],
  },
  plugins: [
    // new CleanWebpackPlugin(), // 在每次构建前清理 dist 文件夹
    new HtmlWebpackPlugin({
      template: './src/index.html', // HTML 模板
      minify: {
        removeComments: true,
        collapseWhitespace: true,
        removeAttributeQuotes: true,
      },
    }),
    // new MiniCssExtractPlugin({
    //   filename: '[name].[contenthash].css', // 提取的 CSS 文件名
    // }),
  ],
//   optimization: {
//     minimize: true, // 启用代码压缩
//     minimizer: [
//       new TerserPlugin({
//         terserOptions: {
//           compress: {
//             drop_console: true, // 去掉 console.log
//           },
//         },
//       }),
//     ],
//     splitChunks: {
//       chunks: 'all', // 代码分割
//     },
//   },
  devtool: 'source-map', // 生成源映射文件
  devServer: {
    contentBase: path.join(__dirname, 'dist'),
    compress: true,
    port: 9000,
    historyApiFallback: true, // 支持 React Router
  },
};